from abc import ABC, abstractmethod

class GenerativeModel(ABC):
    """
    Abstract base class for generative models.
    """

    @abstractmethod
    def train(self, data):
        """
        Train the generative model on the data.

        :param data: The data to train the model on.
        """
        pass

    @abstractmethod
    def generate(self, num_samples):
        """
        Generate new data points using the trained model.

        :param num_samples: The number of new data points to generate.
        :return: A set of generated data points.
        """
        pass

    @abstractmethod
    def evaluate(self, real_data, generated_data):
        """
        Evaluate the quality of the generated data.

        :param real_data: The real data to compare against.
        :param generated_data: The data generated by the model.
        :return: A metric or set of metrics evaluating the quality of the generated data.
        """
        pass
